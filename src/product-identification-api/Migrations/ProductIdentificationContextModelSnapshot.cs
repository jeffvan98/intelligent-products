// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace product_identification_api.Migrations
{
    [DbContext(typeof(ProductIdentificationContext))]
    partial class ProductIdentificationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("IntelligentProducts.ProductIdentificationApi.Models.AlternateIdentity", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdentityType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId", "IdentityType");

                    b.ToTable("AlternateIdentities");
                });

            modelBuilder.Entity("IntelligentProducts.ProductIdentificationApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("IntroductionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("SalesDiscontinuationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("SupportDiscontinuationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IntelligentProducts.ProductIdentificationApi.Models.AlternateIdentity", b =>
                {
                    b.HasOne("IntelligentProducts.ProductIdentificationApi.Models.Product", "Product")
                        .WithMany("AlternateIdentities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IntelligentProducts.ProductIdentificationApi.Models.Product", b =>
                {
                    b.Navigation("AlternateIdentities");
                });
#pragma warning restore 612, 618
        }
    }
}
